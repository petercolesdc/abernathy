
// General
// ------------------------------------------------------------------

%errorState {
  html > body .form-elementError & {
    border-color: $cError;
  }
}

form {
  position: relative;
}

fieldset {
  border: none;
  padding: 0.01em 0 0 0;
  + fieldset {
    margin-top: rem($formVSpace);
  }
}

legend {
  font-size: rem($typeLegend);
  color: $cHeading;
  display: block;
  margin-bottom: 0.5em;
}

label {
  font-size: rem($typeLabel);
  color: $cLabel;
  display: block;
  .form-elementError & {
    color: $cError;
  }
}

input:not([type=checkbox]):not([type=radio]) {
  border: $strokeWidth solid $cBorder;
  height: rem($formItem);
  font-size: rem($formInputText);
  border-radius: rem($formRadius);
  padding: 0 rem($formPadding);
	display: block;
	appearance: none;
  width: 100%;
  outline: none;
  // Turn off spinners for number input field
  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
  	appearance: none;
  }
  &:focus {
    border-color: $cFocus;
    outline: none;
  }
}

input[type] {
  @extend %errorState;
}

// Min height to text area
textarea {
  font-size: rem($formInputText);
  padding: rem($formPadding);
  display: block;
  width: 100%;
  border: $strokeWidth solid $cBorder;
  @extend %errorState;
  outline: none;
  &:focus {
    border-color: $cFocus;
    outline: none;
  }
}

select {
  font-size: rem($formInputText);
  height: rem($formItem);
  border: $strokeWidth solid $cBorder;
  border-radius: rem($formRadius);
  padding: 0 rem($formPadding);
  width: 100%;
  display: block;
  vertical-align: middle;
  appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24' height='24' viewBox='0 0 24 24'><path fill='%23444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>");
  background-position: 99.5% 50%;
  background-repeat: no-repeat;
  outline: none;
  &:hover, &:active {
    cursor: pointer;
  }
  &:focus {
    border-color: $cFocus;
    outline: none;
  }
  @extend %errorState;
}

// Form element styles
// ------------------------------------------------------------------

.form-element {
  position: relative;
  &__notes {
    display: none;
    position: relative;
    .form-elementError & {
      display: block;
      padding: 0.5em 1em;
      background-color: $cFormNotes;
      border: $strokeWidth solid darken($cFormNotes, 20%);
      border-top: 0;
    }
    .form-elementHint & {
      display: block;
      padding-top: 0.5em;
    }
  }
  &__hint,
  &__error-message {
    color: $cText;
    font-size: rem($typeLabel);
    clear: left;
    display: block
  }
  &__error-message {
    color: $cError;
  }
  &RadioCheckbox {
    height: 100%;
    label {
      position: relative;
      vertical-align: middle;
      padding: 0.5em 0; // Give the field a bigger hit area for fat-fingers
      cursor: pointer;
    }
    input {
      margin-right: rem(12);
      vertical-align: middle;
      &:focus {
        outline-color: $cFocus;
      }
    }
    input[type="radio"],
    input[type="checkbox"] {
      width: rem(22);
      height: rem(22);
      position: relative;
    }
  }
}

// Form field spaing blocks
// ------------------------------------------------------------------

.formfield {
	position: relative;
	@include pie-clearfix;
  &Spaced {
    margin-top: rem($formVSpace);
  }
}
